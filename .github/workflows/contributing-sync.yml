name: CONTRIBUTING.md Sync

on:
  workflow_call:
    inputs:
      source_repo:
        description: 'Source repository for CONTRIBUTING.md'
        default: 'PitchConnect/contribution-guidelines'
        type: string
      source_path:
        description: 'Path to CONTRIBUTING.md in source repo'
        default: 'CONTRIBUTING.md'
        type: string
      target_path:
        description: 'Path to CONTRIBUTING.md in target repo'
        default: 'CONTRIBUTING.md'
        type: string
      preserve_section:
        description: 'Section to preserve in target repo'
        default: '## Repository-Specific Guidelines'
        type: string

jobs:
  sync-contributing:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout target repository
        uses: actions/checkout@v3
        
      - name: Sync CONTRIBUTING.md while preserving repository-specific content
        run: |
          # Download source CONTRIBUTING.md
          curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3.raw" \
            "https://api.github.com/repos/${{ inputs.source_repo }}/contents/${{ inputs.source_path }}" > source_contributing.md
          
          # Check if target CONTRIBUTING.md exists
          if [ -f "${{ inputs.target_path }}" ]; then
            # Create temporary files
            touch repo_specific.tmp
            touch maintainer_section.tmp
            
            # Check if the repository-specific section exists
            if grep -q "^${{ inputs.preserve_section }}" "${{ inputs.target_path }}"; then
              echo "Found repository-specific section, preserving it..."
              # Extract everything between Repository-Specific Guidelines and END COMMON SECTION
              awk '/^${{ inputs.preserve_section }}/,/<!-- END COMMON SECTION -->/' "${{ inputs.target_path }}" > repo_specific.tmp
              
              # Check if we also have a maintainer section after the common section
              if grep -q "^## For Maintainers" "${{ inputs.target_path }}"; then
                echo "Found maintainer section, preserving it..."
                # Extract everything after END COMMON SECTION
                awk '/<!-- END COMMON SECTION -->/,0' "${{ inputs.target_path }}" | grep -v "<!-- END COMMON SECTION -->" > maintainer_section.tmp
              fi
            else
              echo "No repository-specific section found, creating default..."
              # Create a default repository-specific section
              echo -e "${{ inputs.preserve_section }}\n\n<!-- Add repository-specific guidelines here -->\n\n<!-- END COMMON SECTION -->" > repo_specific.tmp
            fi
            
            # Check if the source file has a Repository-Specific Guidelines section
            if grep -q "^${{ inputs.preserve_section }}" "source_contributing.md"; then
              echo "Source has Repository-Specific Guidelines section, replacing it..."
              # Replace the section in the source file with our preserved content
              sed -i '/^${{ inputs.preserve_section }}/,/<!-- END COMMON SECTION -->/d' source_contributing.md
              cat source_contributing.md > merged_contributing.md
              cat repo_specific.tmp >> merged_contributing.md
              
              # Add the maintainer section if it's not empty
              if [ -s "maintainer_section.tmp" ]; then
                echo "Adding preserved maintainer section..."
                cat maintainer_section.tmp >> merged_contributing.md
              fi
            else
              echo "Source doesn't have Repository-Specific Guidelines section, appending ours..."
              # If the source doesn't have the section, append our section to the end
              cat source_contributing.md > merged_contributing.md
              echo "" >> merged_contributing.md
              cat repo_specific.tmp >> merged_contributing.md
              
              # Add the maintainer section if it's not empty
              if [ -s "maintainer_section.tmp" ]; then
                echo "Adding preserved maintainer section..."
                cat maintainer_section.tmp >> merged_contributing.md
              fi
            fi
            
            # Update the CONTRIBUTING.md file
            mv merged_contributing.md "${{ inputs.target_path }}"
            
            # Clean up temporary files
            rm -f repo_specific.tmp maintainer_section.tmp source_contributing.md
          else
            echo "No existing CONTRIBUTING.md found, using source version..."
            # If no existing CONTRIBUTING.md, just use the source
            mv source_contributing.md "${{ inputs.target_path }}"
          fi
          
          # Commit changes if any
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add "${{ inputs.target_path }}"
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update CONTRIBUTING.md from ${{ inputs.source_repo }}"
            git push
            echo "Changes committed and pushed"
          fi
